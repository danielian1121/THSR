name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Restore Golang Image Cache if it exists
        id: cache-docker-golang
        uses: actions/cache@v3
        with:
          path: ci/cache/docker/golang
          key: cache-docker-golang-1.21

      - name: Update Golang Image Cache if cache miss
        if: steps.cache-docker-golang.outputs.cache-hit != 'true'
        run: docker pull golang:1.21 && mkdir -p ci/cache/docker/golang && docker image save golang:1.21 --output ./ci/cache/docker/golang/golang-1.21.tar

      - name: Use Golang Image Cache if cache hit
        if: steps.cache-docker-golang.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/cache/docker/golang/golang-1.21.tar

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./deployment/thsr/Dockerfile
          push: true
          tags: danielian1121/thsr:latest
          cache-from: type=registry,ref=danielian1121/thsr:latest
          cache-to: type=inline
          secrets: |
            "accessid=${{ secrets.KEY_ACCESS_ID }}"
            "accesskey=${{ secrets.KEY_ACCESS_KEY }}"
      -
        name: Deploy
        # Only run this step if the branch is main
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"
